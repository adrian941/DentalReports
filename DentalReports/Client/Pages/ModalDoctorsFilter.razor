

<EditForm Model="OriginalDoctors" OnValidSubmit="HandleValidSubmit">
    <div class="form-group">

        @foreach (var doctorViewModel in Doctors)
        {
            <div class="form-check">
                <input type="checkbox" class="form-check-input" id="@($"checkbox_{doctorViewModel.Doctor.Id}")" @bind="doctorViewModel.IsChecked" />
                <label class="form-check-label" for="@($"checkbox_{doctorViewModel.Doctor.Id}")">@doctorViewModel.Doctor.FirstName @doctorViewModel.Doctor.LastName</label>
            </div>
        }


    </div>
    <br />
    <div class="form-group">
        <button class="btn btn-primary" type="submit">Submit</button>
    </div>
</EditForm>


@code {

    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }


    [Parameter] public List<DisplayDoctor> OriginalDoctors { get; set; }
    public List<DisplayDoctor> FilteredDoctors = new List<DisplayDoctor>();

    public List<DisplayDoctorViewModel> Doctors { get; set; } = new List<DisplayDoctorViewModel>();

    protected override async Task OnInitializedAsync()
    {
        FilteredDoctors = OriginalDoctors;
        foreach (var Doctor in OriginalDoctors)
        {
            Doctors.Add(new DisplayDoctorViewModel { Doctor = Doctor, IsChecked = false });
        }

    }

    private async void HandleValidSubmit()
    {
        FilteredDoctors = Doctors.Where(x => x.IsChecked).Select(x => x.Doctor).ToList();
        await ModalInstance.CloseAsync(ModalResult.Ok(FilteredDoctors));
        await ModalInstance.CancelAsync();
    }


    public class DisplayDoctorViewModel
    {
        public DisplayDoctor Doctor { get; set; }
        public bool IsChecked { get; set; }
    }

}