@page "/"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject AuthenticationStateProvider _authenticationStateProvider
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime

 


<PageTitle>Patients</PageTitle>

 




    <AuthorizeView>
        <Authorized>
            <div style="margin:15px;">
            <h3> You are authenticated,  @context.User.Identity!.Name !</h3>
            
            @* Get the FirstName Claim of User *@
            <h5> Your FirstName is: @context.User.FindFirst(c => c.Type == "FirstName")?.Value </h5>
            <h5> Your FirstName is: @context.User.Claims.FirstOrDefault(c => c.Type == "FirstName")?.Value </h5>


            <h5> Here it will be created a new site for Megagen. </h5>
            <br />

            <button @onclick="NavigateToStl"> View STL </button>

            </div>
        
        </Authorized>
        <NotAuthorized>

            <div style="margin:15px;">
                <h3> You are not authenticated! </h3>
                <h5> Please <a href="/authentication/login">Login </a> or <a href="/authentication/register"> Register </a> !</h5>

            </div>
          
        </NotAuthorized>
    </AuthorizeView>



 





@code {

    private void NavigateToStl()
    {
        _navigationManager.NavigateTo("/view-stl");
    }


    protected override async Task OnInitializedAsync()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        string FirstName = user.FindFirst(c => c.Type == "FirstName")?.Value;
        string LastName = user.FindFirst(c => c.Type == "LastName")?.Value;
 




    }



}